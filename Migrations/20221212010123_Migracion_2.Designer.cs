// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prueba_proyecto_1.Context;

#nullable disable

namespace Prueba_proyecto_1.Migrations
{
    [DbContext(typeof(Proyecto1DbContext))]
    [Migration("20221212010123_Migracion_2")]
    partial class Migracion_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Prueba_proyecto_1.Models.AutorClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AutorClass")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad_procedencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo_electrónico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorClass");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Prueba_proyecto_1.Models.GeneroClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneroClass")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneroClass");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Prueba_proyecto_1.Models.LibroClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int>("Numero_paginas")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("Prueba_proyecto_1.Models.AutorClass", b =>
                {
                    b.HasOne("Prueba_proyecto_1.Models.LibroClass", null)
                        .WithMany("Autor")
                        .HasForeignKey("AutorClass");
                });

            modelBuilder.Entity("Prueba_proyecto_1.Models.GeneroClass", b =>
                {
                    b.HasOne("Prueba_proyecto_1.Models.LibroClass", null)
                        .WithMany("Genero")
                        .HasForeignKey("GeneroClass");
                });

            modelBuilder.Entity("Prueba_proyecto_1.Models.LibroClass", b =>
                {
                    b.Navigation("Autor");

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
